#pragma once
#include "Dessign.h"

class Game;  //логіка гри восновному

class Game_AI  // аналогічно логіка гри восновному
{
private:
	int response, apocal;  //відповідь
	char control;          // для зчитування певного сиволу
public:
	int maximum;  // максимум
	int win;    //перемога(к-сть що треба набрати)
	int plus;   // те що додається до рахунку за останній хід
	int score;  // рахунок
	int grid[4][4];   // сітка(поле)
	int bgrid[4][4];

	Game_AI() : score(0), plus(0), win(2048), maximum(0), response(0), apocal(1) {};

	//взагалі названі так що відображають те що роблять але хай
	void logicFlow(Game* execute);   //перевіряє зчитане та викликає відповідні методи
	bool gameEndCheck(Game* screen); //перевіряє чи виграв чи програв гравець + пропонує зберегти результат + чи продовжити гру
	void keyPress();   // просто зчитує
	void startGrid();  // готує початкове поле(рандомить випадкові числа та заповнює масив полів) + задає зміним рахунку та іншим початкові значчення
	void updateGrid(); // що очевидно з назви оновлює поле, дивиться чим заповнення control(тобто те що введенно з клавіатури) та виконує відповідні дії
	void fillSpace();  // що теж очевидно з назви заповнює простір(поле)
	void spawn();      // генерує певні випадкові числа та заповнює ними
	void findGreatestTile(); //знаходить значення більші за максимум(змінна публічна класу)  та прирівнює до максимум
	int full();              //перевіряє чи повне і повертає 1 або 0 взалежності від результату
	int blockMoves();        // (теж зрозуміло з назви) метод змінює позиції певних 'блоків'(значеннь)
};

class Game : public Game_AI, public Dessign  // має вже більш конкретні методи фактично там є метод який і відповідає за гру
{//  тобто тільки зібрати ці методи(=ігровий процес)їхньою збірклю та покрокоаим викликом займеться інший наступний і вже фінальний клас 
private:
	char option;  //знадобиться для запису зчитаного результату з клавіатури
	string name;  // імя користувача (неоюхідне при зверненні до нього та  записі його результату у файл)
public:
	void displayGrid();     //відображає фінальне поле що ми бачимо під час гри (тобто поле гри, рахунок, назва та інше)
	void displayHelpScreen();  // відображає справку як необхідно грати тобто правила та підказки
	void displayWinScreen();   // просто відображає екран перемоги та записує результат гравця
	void displayLoserScreen(); // аналогічно екрану перемоги просто відображає екран проте програшу та питає записує результат гравця за його бажання
	char displayTryAgainScreen(int lose); // питає чи хоче гравець спробувати знову + тут записує у файл ! результат гравця
};
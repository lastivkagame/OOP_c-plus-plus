/*2. Создать базовый класс «Домашнее животное» и производные классы «Собака», «Кошка», «Попугай», «Хомяк».
С помощью конструктора установить имя каждого животного и его характеристики.
Реализуйте для каждого из классов функции
Sound - издает звук животного (пишем текстом в консоль)
Show - отображает имя животного
Type - отображает название его подвида

Создать массив разных объектов домашних животных.


Створити масив( або вектор) масив різних обєктів дом. тваринок.
Викликати методи Sound(), Show(), Type() для  кожного обєкта тваринки.


(Pet)Animal *arr [] = { new Cat,.... }
vector<Animal * > vect { new Cat,.... }

Вызвать методы Sound, Show,  Type для каждого объекта массива.

 Додати клас Домашній Зоопарк, що містить
	поля
	 -  вектор дом. тваринок(vector<Animal *>)

	методи
	 - конструктор(зоопарк  пустий)
	 - деструктор(вилучити всі тваринки з вектору)

	 - додавання певної тваринки у Зоопарк на замовлення користувача
	 - метод автоматичного додавання кількох "випадкових" тваринок у зоопарк
	 - метод перегдяду списку тваринок
	 - метод редагування тваринки(редагується назва чи вік, не тип тваринки)
	 - метод вилучення(продажу) тваринки з зоопарку
	 - метод вилучення(продажу) всіх тваринок

class HomeZoo
{
	vector <Animal *> zoo  ;

};*/

#include "Pet.h"

int main()
{
	// - 1 -
	Pet* arr[] = { new Dog,new Cat,new Parrot,new Hamster };

	for (int i = 0; i < 4; i++)
	{
		arr[i]->Sound();
		arr[i]->Show();
		cout << endl;

	}
	system("pause");
	system("cls");

	// - 2 -
	HomeZoo zoo;

	zoo.AddPet();
	cout << endl;
	zoo.AddPet();
	cout << endl;
	cout << " ----- random animals (types) -----\n";
	zoo.AddRandomPets(2);
	system("cls");
	zoo.Print();
	zoo.DelPets();
	cout << endl << "After sold all animal\n";
	zoo.Print();

	return 0;
}